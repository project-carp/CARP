apply plugin: "spring-boot"
apply plugin: "com.moowork.node"
apply plugin: "application"

buildscript {

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:${springLoadedVersion}")

        classpath("com.moowork.gradle:gradle-node-plugin:0.12")
    }

}

dependencies {
    compile project(":carp-common")
    compile project(":carp-api")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")

    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.security.oauth:spring-security-oauth2")

    compile("io.github.hzpz.spring.boot:mongeez-spring-boot-starter:1.2.0")

    compile("org.mongodb:mongo-java-driver:3.2.2")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("com.github.fakemongo:fongo:2.0.6")
}

// Specific configuration for the Spring Loaded hot swap features
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

bootRun {
    dependsOn("npmInstall")
    dependsOn("tsc")
    systemProperties = System.properties

    main = 'pl.carp.webapp.CarpApplication'
}

node {
    nodeModulesDir = file("src/main/resources/static/")
}

task tscw(type: NpmTask) {
    args = ['run', 'tscw']
    workingDir = file("src/main/resources/static/")
}

task tsc(type: NpmTask) {
    args = ['run', 'tsc']
    workingDir = file("src/main/resources/static/")
}

task runFrontend(dependsOn: [npmInstall, tscw]) {}

task cleanAngular(type: Delete) {
    delete "src/main/resources/static/typings/"
    delete "src/main/resources/static/node_modules/"
}

task stage{
    dependsOn("npmInstall")
    dependsOn("tsc")
}